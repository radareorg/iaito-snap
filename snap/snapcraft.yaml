name: iaito
adopt-info: iaito
confinement: classic
compression: lzo
grade: stable
base: core24
platforms:
  amd64:
    build-on: [amd64]
    build-for: amd64
  arm64:
    build-on: [arm64]
    build-for: arm64
apps:
  iaito:
    command: bin/iaito
    common-id: org.radare.iaito
    desktop: share/applications/org.radare.iaito.desktop
  r2:
    command: bin/r2
  r2agent:
    command: bin/r2agent
  r2frida-compile:
    command: bin/r2frida-compile
  r2p:
    command: bin/r2p
  r2pm:
    command: bin/r2pm
  r2r:
    command: bin/r2r
  rabin2:
    command: bin/rabin2
  radare2:
    command: bin/radare2
  radiff2:
    command: bin/radiff2
  rafind2:
    command: bin/rafind2
  ragg2:
    command: bin/ragg2
  rahash2:
    command: bin/rahash2
  rarun2:
    command: bin/rarun2
  rasign2:
    command: bin/rasign2
  rasm2:
    command: bin/rasm2
  ravc2:
    command: bin/ravc2
  rax2:
    command: bin/rax2
  sleighc:
    command: bin/sleighc
  yara:
    command: bin/yara
  yarac:
    command: bin/yarac
environment:
  R2_PREFIX: "$SNAP"
  SLEIGHHOME: "$SNAP/lib/radare2/last/r2ghidra_sleigh"
  PATH: "$SNAP/bin:$SNAP/usr/bin:${PATH}"
  XDG_DATA_DIRS: "$SNAP/share:$SNAP/usr/share${XDG_DATA_DIRS:+:$XDG_DATA_DIRS}:/usr/local/share:/usr/share"
  PKG_CONFIG_PATH: "$SNAP/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH}"
  LD_LIBRARY_PATH: "${SNAP_LIBRARY_PATH}${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}:$SNAP/lib"
  LIBGL_DRIVERS_PATH: "$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/dri${LIBGL_DRIVERS_PATH:+:$LIBGL_DRIVERS_PATH}"
  __EGL_VENDOR_LIBRARY_DIRS: "$SNAP/usr/share/glvnd/egl_vendor.d${__EGL_VENDOR_LIBRARY_DIRS:+:$__EGL_VENDOR_LIBRARY_DIRS}:/etc/glvnd/egl_vendor.d:/usr/share/glvnd/egl_vendor.d"
  __EGL_EXTERNAL_PLATFORM_CONFIG_DIRS: "$SNAP/usr/share/egl/egl_external_platform.d${__EGL_EXTERNAL_PLATFORM_CONFIG_DIRS:+:$__EGL_EXTERNAL_PLATFORM_CONFIG_DIRS}:/etc/egl/egl_external_platform.d:/usr/share/egl/egl_external_platform.d"
parts:
  radare2:
    plugin: autotools
    source: https://github.com/radareorg/radare2.git
    source-type: git
    source-depth: 1
    source-tag: '5.9.4'
    build-attributes:
      - enable-patchelf
    build-environment:
      - CFLAGS: "${CFLAGS:+} -O3"
    autotools-configure-parameters:
      - --prefix=/
      - --with-checks-level=0
    override-prime: |
      craftctl default
      sed -i "s,$CRAFT_STAGE,/snap/$SNAPCRAFT_PROJECT_NAME/current," "$CRAFT_PRIME/lib/pkgconfig/"*.pc "$CRAFT_PRIME/include/libr/r_userconf.h"
  r2ghidra:
    after:
      - radare2
    plugin: autotools
    source: https://github.com/radareorg/r2ghidra.git
    source-type: git
    source-depth: 1
    source-tag: '5.9.4'
    build-attributes:
      - enable-patchelf
    build-environment:
      - CFLAGS: "${CFLAGS:+} -O3"
      - LD_LIBRARY_PATH: "$CRAFT_STAGE/lib${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}"
    override-pull: |
      craftctl default
      ./preconfigure
    autotools-configure-parameters:
      - --prefix=/
      - --with-checks-level=0
  r2frida:
    after:
      - radare2
    plugin: autotools
    source: https://github.com/nowsecure/r2frida.git
    source-type: git
    source-depth: 1
    source-tag: '5.9.4'
    build-attributes:
      - enable-patchelf
    build-environment:
      - CFLAGS: "${CFLAGS:+} -O3"
      - LD_LIBRARY_PATH: "$CRAFT_STAGE/lib${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}"
    autotools-configure-parameters:
      - --prefix=/
      - --with-checks-level=0
  meson-deps:
    plugin: nil
    build-packages:
      - python3-pip
      - ninja-build
    override-build: python3 -m pip install meson~=0.64.1
    prime:
      - -*
  r2dec:
    after:
      - radare2
      - meson-deps
    plugin: meson
    source: https://github.com/wargio/r2dec-js.git
    source-type: git
    source-depth: 1
    source-tag: '5.9.2'
    build-attributes:
      - enable-patchelf
    build-environment:
      - CFLAGS: "${CFLAGS:+} -O3"
      # Fix meson radare paths detection
      - R2_LIBDIR: "$CRAFT_STAGE/lib"
      - R2_INCDIR: "$CRAFT_STAGE/include/libr"
      - R2_LIBR_PLUGINS: "/lib/radare2/$SNAPCRAFT_PROJECT_VERSION"
    override-build: |
      meson --prefix / --libdir lib -Dr2_libdir="$R2_LIBDIR" -Dr2_incdir="$R2_INCDIR" -Dr2_plugdir="$R2_LIBR_PLUGINS" -Djsc_folder="$CRAFT_PART_SRC" "$CRAFT_PART_SRC/p"
      ninja
      DESTDIR="$CRAFT_PART_INSTALL" ninja install
  yara:
    after:
      - radare2
    plugin: autotools
    source: https://github.com/VirusTotal/yara.git
    source-type: git
    source-depth: 1
    source-tag: 'v4.5.1'
    build-attributes:
      - enable-patchelf
    build-environment:
      - CFLAGS: "${CFLAGS:+} -O3"
      - LD_LIBRARY_PATH: "$CRAFT_STAGE/lib${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}"
    override-pull: |
      craftctl default
      ./bootstrap.sh
    autotools-configure-parameters:
      - --prefix=/
    override-prime: |
      craftctl default
      sed -i "s,$CRAFT_STAGE,/snap/$SNAPCRAFT_PROJECT_NAME/current," "$CRAFT_PRIME/lib/pkgconfig/"*.pc "$CRAFT_PRIME/lib/"*.la
  r2yara:
    after:
      - radare2
      - yara
    plugin: autotools
    source: https://github.com/radareorg/r2yara.git
    source-type: git
    source-depth: 1
    source-tag: '1.3.0'
    build-attributes:
      - enable-patchelf
    build-environment:
      - CFLAGS: "${CFLAGS:+} -O3"
      - LD_LIBRARY_PATH: "$CRAFT_STAGE/lib${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}"
    autotools-configure-parameters:
      - --prefix=/
      - --with-checks-level=0
  iaito:
    after:
      - radare2
    plugin: qmake
    source: https://github.com/radareorg/iaito.git
    source-type: git
    source-depth: 1
    source-tag: '5.9.4'
    parse-info:
      - src/org.radare.iaito.appdata.xml
    qmake-project-file: src/Iaito.pro
    qmake-parameters:
      - PREFIX=/
      - -config
      - release
    build-attributes:
      - enable-patchelf
    build-environment:
      - PATH: "/usr/lib/qt6/bin:${PATH}"
    build-packages:
      - pkgconf
      - libgraphviz-dev
      - qt6-base-dev
      - qt6-declarative-dev
      - qt6-svg-dev
    override-build: |
      craftctl default
      sed -i -e "s,Icon=\(.*\)\$,Icon=/share/icons/hicolor/scalable/apps/\1.svg," "$CRAFT_PART_INSTALL"/share/applications/org.radare.iaito.desktop
    stage-packages:
      - graphviz
      # X11 + wayland
      - xkb-data
      - libx11-6
      - libxcb1
      - libxkbcommon0
      - libglvnd0
      - libnvidia-egl-wayland1
      # Theming
      # qt6-xdgdesktopportal-platformtheme # added in manual-patchelf
      - libqt6dbus6t64
      # QT6
      - qt6-wayland
      - libqt6core6t64
      - libqt6gui6t64
      - libqt6network6t64
      - libqt6widgets6t64
      - libqt6svg6 # also for loading icon themes which are svg
      - libqt6svgwidgets6
    prime:
      # Remove nondesired base paths
      - "-etc"
      - "-usr/bin/X11"
      - "-usr/include"
      # The libraries in .../qt6/plugins will be primed in manual-patchelf
      - "-usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/qt6/plugins"
      # Remove nondesired library files
      - "-usr/lib/X11" # already empty
      - "-usr/lib/sasl2" # already empty
      - "-lib/udev"
      - "-usr/lib/udev"
      # The libraries in .../dri will be primed in manual-patchelf
      - "-usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/dri"
      # The JSON needs to be modified on prime will do in manual-patchelf
      - "-usr/share/egl/egl_external_platform.d"
      - "-usr/share/glvnd/egl_vendor.d"
      # Remove nondesired metadata
      - "-usr/share/apport"
      - "-usr/share/bug"
      - "-usr/share/doc"
      - "-usr/share/doc-base"
      - "-usr/share/lintian"
      - "-usr/share/man"
      - "-usr/share/menu"
      - "-usr/share/pkgconfig"
      - "-usr/share/upstart"
  iaito-translations:
    plugin: nil
    source: https://github.com/radareorg/iaito-translations.git
    source-type: git
    source-depth: 1
    source-branch: master
    build-environment:
      - PATH: "/usr/lib/qt6/bin:${PATH}"
    build-packages:
      - qt6-l10n-tools
    build-attributes:
      - no-patchelf
    override-build: make install PREFIX=$CRAFT_PART_INSTALL
  manual-patchelf:
    # QT plugins and Mesa drivers need to be patched manually
    #  snapcraft automatic patchelf strips the QT metadata and Mesa BuildID
    #  not allowing them to load or crash
    plugin: nil
    build-attributes:
      - no-patchelf
    build-packages:
      - patchelf
      - jq
    stage-packages:
      - qt6-wayland
      - qt6-xdgdesktopportal-platformtheme
      - libqt6gui6t64
      - libqt6network6t64
      - libqt6svg6
      - libnvidia-egl-wayland1
      - libgl1-mesa-dri
    stage:
      - usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/qt6/plugins
      - usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/dri
      - usr/share/glvnd/egl_vendor.d
      - usr/share/egl/egl_external_platform.d
    override-prime: |
      craftctl default
      LIBRARY_PATH="/snap/core24/current/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}"
      patchelf --force-rpath --set-rpath "\$ORIGIN/../..:\$ORIGIN/../../..:\$ORIGIN/../../../libproxy:$LIBRARY_PATH" "$CRAFT_PRIME/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/qt6/plugins/"*/*.so
      patchelf --force-rpath --set-rpath "\$ORIGIN/..:$LIBRARY_PATH" "$CRAFT_PRIME/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/dri/"*.so
      for json in "$CRAFT_PRIME/usr/share/glvnd/egl_vendor.d/"*.json "$CRAFT_PRIME/usr/share/egl/egl_external_platform.d/"*.json; do
        jq '.ICD.library_path=("'"../../../lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/"'"+.ICD.library_path)' "$json" > "$json".new
        mv "$json".new "$json"
      done
  qtconf:
    plugin: nil
    override-build: |
      mkdir -p "$CRAFT_PART_INSTALL"/bin
      cat <<EOF > "$CRAFT_PART_INSTALL"/bin/qt.conf
      [Paths]
      Prefix = ..
      ArchData=usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/qt6
      Binaries=usr/lib/qt6/bin
      Data=usr/share/qt6
      Documentation=usr/share/qt6/doc
      Headers=include/$CRAFT_ARCH_TRIPLET_BUILD_FOR/qt6
      HostBinaries=usr/lib/qt6/bin
      HostData=usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/qt6
      HostLibraries=usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR
      Libraries=usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR
      LibraryExecutables=usr/lib/qt6/libexec
      Plugins=usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/qt6/plugins
      Qml2Imports=usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/qt6/qml
      Settings=etc/xdg
      Translations=share/iaito/translations
      EOF
